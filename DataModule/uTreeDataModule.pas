{*******************************************************}
{   @author       侯叶飞                                }
{   @date         2025年5月29日                         }
{   @deprecated   树节点的数据库操作			              }
{*******************************************************}
unit uTreeDataModule;

interface

uses
  System.Generics.Collections, FireDAC.Comp.Client, uEntity;

type
  TTreeDataModule = class
  private
    FQuery: TFDQuery;
  public
    constructor Create();
     /// <summary>
     ///  根据ID查询某个节点数据
     /// </summary>
     /// <param name="Id">当前节点ID</param>
     /// <returns>当前节点</returns>
    function FindById(Id: string): TStringWrapper;
     /// <summary>
     ///  查询某个父节点下的所有子节点
     /// </summary>
     /// <param name="Pid">父节点ID</param>
     /// <returns>返回子节点列表</returns>
    function FindByPid(Pid: string): TList<TStringWrapper>;

     /// <summary>
     ///  添加节点
     /// </summary>
     /// <param name="StringWrapper">需要添加的节点数据</param>
     /// <returns>成功返回True</returns>
    function Insert(StringWrapper: TStringWrapper): Boolean;

     /// <summary>
     ///  删除节点
     /// </summary>
     /// <param name="Id">节点的ID</param>
     /// <returns>删除成功返回True</returns>
    function DelById(Id: string): Boolean;
     /// <summary>
     ///  根据等级查询节点
     /// </summary>
     /// <param name="Level">等级默认为0</param>
     /// <returns>节点列表</returns>
    function FindNodesWithLevel(Level: Integer = 0): TList<TStringWrapper>;
  end;

implementation

uses
  uSqlConfig;
{ TTreeDataModule }

constructor TTreeDataModule.Create;
begin
  FQuery := TConnection.Build.GetQuery;
end;

function TTreeDataModule.DelById(Id: string): Boolean;
begin

end;

function TTreeDataModule.FindById(Id: string): TStringWrapper;
begin

end;

function TTreeDataModule.FindByPid(Pid: string): TList<TStringWrapper>;
begin

end;

function TTreeDataModule.FindNodesWithLevel(Level: Integer): TList<TStringWrapper>;
begin

end;

function TTreeDataModule.Insert(StringWrapper: TStringWrapper): Boolean;
begin

end;

end.

